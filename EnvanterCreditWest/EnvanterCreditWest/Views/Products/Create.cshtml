@model EnvanterCreditWest.Models.Products

@{
                /**/

                ViewBag.Title = "Create";
                Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .fas {
        margin: 1vh;
    }
   
</style>

@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Cihaz Ekle</h4>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">

        @Html.LabelFor(model => model.BrandId, null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="row">
            <div class="col-sm-8">
                @Html.DropDownList("BrandId", null, htmlAttributes: new { @class = "form-control", @id = "dropDownBrands" })
                @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-2">
                    <a href="/Brands/Create" class="btn btn-primary">
                        <i class="fas fa-plus"></i>
                        Marka Ekle
                    </a>
            </div>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.TypeId, null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="row">
            <div class="col-sm-8">
                @Html.DropDownList("TypeId", null, htmlAttributes: new { @class = "form-control", @id = "dropDownType" })
                @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-2">
                <a href="/Typeys/Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i>
                    Tür Ekle
                </a>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductModelId, null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="row">
            <div class="col-sm-8">
                @Html.DropDownList("ProductModelId", null, htmlAttributes: new { @class = "form-control", @id = "dropDownModels" })
                @Html.ValidationMessageFor(model => model.ProductModelId, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-2">
                <a href="/ProductModels/Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i>
                    Model Ekle
                </a>
            </div>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.BranchId, null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="row">
            <div class="col-sm-8">
                @Html.DropDownList("BranchId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-2">
                <a href="/Branches/Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i>
                    Şube Ekle
                </a>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UserId, null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="row">
            <div class="col-sm-8">
                @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-2">
                <a href="/Users/Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i>
                    Kullanıcı Ekle
                </a>
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.FirmId, null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="row">
            <div class="col-sm-8">
                @Html.DropDownList("FirmId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirmId, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-2">
                <a href="/Firms/Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i>
                    Firma Ekle
                </a>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StatusId, null, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="row">
            <div class="col-sm-8">
                @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-2">
                <a href="/Statuses/Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i>
                    Durum Ekle
                </a>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateAcquired, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.DateAcquired, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateAcquired, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Warranty, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-8">
            @Html.EditorFor(model => model.Warranty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Warranty, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-sm-8">
            <div class="row">
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.DropDownList("Currency", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>


    <div class="form-group">
        Resim
        <div class="col-md-10">
            <input type="file" name="invoiceFile" />
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Kaydet" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>

    $("select").each(function ()
    {
        this.selectedIndex = -1;
    });

    $("#dropDownType").change(function ()
    {
        var typeToModelList = JSON.parse('@Html.Raw(ViewBag.TypeToModels)');
       
        var typeVal = $("#dropDownType :selected").val();
        var dropDownType = document.getElementById("dropDownType");
        var dropDownModels = document.getElementById("dropDownModels");
        
        var allModels = dropDownModels.getElementsByTagName("option");
        var array = [];

        for (i = 0; i < typeToModelList.length; i++)
        {
            if (typeToModelList[i].TypeId == typeVal)
            {
                array.push(typeToModelList[i]);
            }
        }

        for (i = 0; i < allModels.length; i++)
        {
            allModels[i].style.display = "none";
        }
        
        for (i = 0; i < allModels.length; i++)
        {
            for (r = 0; r < array.length; r++)
            {
                if (allModels[i].value == array[r].ModelId)
                {
                    allModels[i].style.display = "block";
                }
            }
        }
        
        dropDownModels.selectedIndex = -1;
        
    });
</script>